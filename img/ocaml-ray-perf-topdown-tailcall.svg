<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="486" onload="init(evt)" viewBox="0 0 1200 486" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="486.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >raytracer.exe (top-down)</text>
<text id="details" x="10.00" y="469" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="469" > </text>
<g id="frames">
<g >
<title>Dune.exe.Raytracer.sky_gradient_1819 (531 samples, 0.14%)</title><rect x="1181.7" y="117" width="1.6" height="15.0" fill="rgb(207,152,21)" rx="2" ry="2" />
<text  x="1184.70" y="127.5" ></text>
</g>
<g >
<title>caml_c_call (1,028 samples, 0.27%)</title><rect x="10.0" y="389" width="3.1" height="15.0" fill="rgb(222,218,11)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>Dune.exe.Raytracer.anon_fn[raytracer.ml:30,38--44]_275 (25,177 samples, 6.52%)</title><rect x="755.9" y="69" width="76.9" height="15.0" fill="rgb(222,226,18)" rx="2" ry="2" />
<text  x="758.91" y="79.5" >Dune.exe..</text>
</g>
<g >
<title>[unknown] (1,028 samples, 0.27%)</title><rect x="10.0" y="405" width="3.1" height="15.0" fill="rgb(237,120,33)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>main (385,351 samples, 99.73%)</title><rect x="13.1" y="373" width="1176.9" height="15.0" fill="rgb(231,154,10)" rx="2" ry="2" />
<text  x="16.15" y="383.5" >main</text>
</g>
<g >
<title>all (386,389 samples, 100%)</title><rect x="10.0" y="437" width="1180.0" height="15.0" fill="rgb(243,226,0)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>caml_call_gc (497 samples, 0.13%)</title><rect x="420.5" y="53" width="1.5" height="15.0" fill="rgb(206,25,22)" rx="2" ry="2" />
<text  x="423.53" y="63.5" ></text>
</g>
<g >
<title>Dune.exe.Raytracer.anon_fn[raytracer.ml:12,31--37]_124 (14,914 samples, 3.86%)</title><rect x="1059.5" y="69" width="45.5" height="15.0" fill="rgb(234,139,49)" rx="2" ry="2" />
<text  x="1062.49" y="79.5" >Dune..</text>
</g>
<g >
<title>caml_apply2 (13,785 samples, 3.57%)</title><rect x="832.8" y="69" width="42.1" height="15.0" fill="rgb(222,60,38)" rx="2" ry="2" />
<text  x="835.81" y="79.5" >cam..</text>
</g>
<g >
<title>Stdlib.seq.aux_208 (385,254 samples, 99.71%)</title><rect x="13.4" y="165" width="1176.5" height="15.0" fill="rgb(246,112,21)" rx="2" ry="2" />
<text  x="16.36" y="175.5" >Stdlib.seq.aux_208</text>
</g>
<g >
<title>Dune.exe.Raytracer.blit_930 (385,350 samples, 99.73%)</title><rect x="13.1" y="197" width="1176.9" height="15.0" fill="rgb(227,221,8)" rx="2" ry="2" />
<text  x="16.15" y="207.5" >Dune.exe.Raytracer.blit_930</text>
</g>
<g >
<title>caml_startup_exn (385,351 samples, 99.73%)</title><rect x="13.1" y="325" width="1176.9" height="15.0" fill="rgb(219,127,26)" rx="2" ry="2" />
<text  x="16.15" y="335.5" >caml_startup_exn</text>
</g>
<g >
<title>Stdlib.random.float_674 (588 samples, 0.15%)</title><rect x="17.1" y="53" width="1.8" height="15.0" fill="rgb(250,18,19)" rx="2" ry="2" />
<text  x="20.07" y="63.5" ></text>
</g>
<g >
<title>caml_apply2 (4,614 samples, 1.19%)</title><rect x="401.7" y="53" width="14.0" height="15.0" fill="rgb(233,114,19)" rx="2" ry="2" />
<text  x="404.65" y="63.5" ></text>
</g>
<g >
<title>Stdlib.float.map2_813 (97,150 samples, 25.14%)</title><rect x="162.4" y="69" width="296.7" height="15.0" fill="rgb(221,138,30)" rx="2" ry="2" />
<text  x="165.44" y="79.5" >Stdlib.float.map2_813</text>
</g>
<g >
<title>Dune.exe.Raytracer.anon_fn[raytracer.ml:49,24--69]_400 (809 samples, 0.21%)</title><rect x="16.6" y="69" width="2.4" height="15.0" fill="rgb(224,103,40)" rx="2" ry="2" />
<text  x="19.57" y="79.5" ></text>
</g>
<g >
<title>caml_apply3 (1,811 samples, 0.47%)</title><rect x="1176.2" y="101" width="5.5" height="15.0" fill="rgb(210,49,21)" rx="2" ry="2" />
<text  x="1179.17" y="111.5" ></text>
</g>
<g >
<title>caml_apply2 (4,607 samples, 1.19%)</title><rect x="1105.2" y="69" width="14.0" height="15.0" fill="rgb(229,156,50)" rx="2" ry="2" />
<text  x="1108.16" y="79.5" ></text>
</g>
<g >
<title>Stdlib.float.init_456 (1,011 samples, 0.26%)</title><rect x="16.1" y="85" width="3.1" height="15.0" fill="rgb(248,200,21)" rx="2" ry="2" />
<text  x="19.11" y="95.5" ></text>
</g>
<g >
<title>caml_call_gc (479 samples, 0.12%)</title><rect x="1128.0" y="69" width="1.4" height="15.0" fill="rgb(211,137,28)" rx="2" ry="2" />
<text  x="1130.98" y="79.5" ></text>
</g>
<g >
<title>Dune.exe.Raytracer.anon_fn[raytracer.ml:24,29--35]_233 (17,053 samples, 4.41%)</title><rect x="349.5" y="53" width="52.1" height="15.0" fill="rgb(219,50,44)" rx="2" ry="2" />
<text  x="352.54" y="63.5" >Dune...</text>
</g>
<g >
<title>Dune.exe.Raytracer.lambertian_1649 (1,544 samples, 0.40%)</title><rect x="15.3" y="117" width="4.7" height="15.0" fill="rgb(251,103,6)" rx="2" ry="2" />
<text  x="18.33" y="127.5" ></text>
</g>
<g >
<title>caml_raise_if_exception (1,113 samples, 0.29%)</title><rect x="455.7" y="53" width="3.4" height="15.0" fill="rgb(212,55,36)" rx="2" ry="2" />
<text  x="458.73" y="63.5" ></text>
</g>
<g >
<title>caml_floatarray_create (7,941 samples, 2.06%)</title><rect x="1129.4" y="69" width="24.3" height="15.0" fill="rgb(215,21,28)" rx="2" ry="2" />
<text  x="1132.44" y="79.5" >c..</text>
</g>
<g >
<title>caml_c_call (1,568 samples, 0.41%)</title><rect x="415.7" y="53" width="4.8" height="15.0" fill="rgb(251,13,2)" rx="2" ry="2" />
<text  x="418.74" y="63.5" ></text>
</g>
<g >
<title>Stdlib.float.map2_813 (95,217 samples, 24.64%)</title><rect x="877.2" y="85" width="290.7" height="15.0" fill="rgb(216,40,50)" rx="2" ry="2" />
<text  x="880.16" y="95.5" >Stdlib.float.map2_813</text>
</g>
<g >
<title>Dune.exe.Raytracer.entry (385,351 samples, 99.73%)</title><rect x="13.1" y="261" width="1176.9" height="15.0" fill="rgb(229,11,41)" rx="2" ry="2" />
<text  x="16.15" y="271.5" >Dune.exe.Raytracer.entry</text>
</g>
<g >
<title>__libc_start_main (385,351 samples, 99.73%)</title><rect x="13.1" y="389" width="1176.9" height="15.0" fill="rgb(250,200,20)" rx="2" ry="2" />
<text  x="16.15" y="399.5" >__libc_start_main</text>
</g>
<g >
<title>caml_call_gc (735 samples, 0.19%)</title><rect x="874.9" y="69" width="2.3" height="15.0" fill="rgb(213,72,32)" rx="2" ry="2" />
<text  x="877.91" y="79.5" ></text>
</g>
<g >
<title>Dune.exe.Raytracer.ray_at_1298 (1,314 samples, 0.34%)</title><rect x="1184.4" y="117" width="4.0" height="15.0" fill="rgb(247,118,8)" rx="2" ry="2" />
<text  x="1187.41" y="127.5" ></text>
</g>
<g >
<title>raytracer.exe (386,389 samples, 100.00%)</title><rect x="10.0" y="421" width="1180.0" height="15.0" fill="rgb(217,195,53)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >raytracer.exe</text>
</g>
<g >
<title>Dune.exe.Raytracer.random_in_unit_sphere_457 (1,145 samples, 0.30%)</title><rect x="15.7" y="101" width="3.5" height="15.0" fill="rgb(206,18,36)" rx="2" ry="2" />
<text  x="18.70" y="111.5" ></text>
</g>
<g >
<title>caml_raise_if_exception (1,282 samples, 0.33%)</title><rect x="1164.0" y="69" width="3.9" height="15.0" fill="rgb(209,20,54)" rx="2" ry="2" />
<text  x="1167.03" y="79.5" ></text>
</g>
<g >
<title>Dune.exe.Raytracer.sphere_6292 (1,753 samples, 0.45%)</title><rect x="1169.1" y="101" width="5.3" height="15.0" fill="rgb(244,9,27)" rx="2" ry="2" />
<text  x="1172.05" y="111.5" ></text>
</g>
<g >
<title>process_pending_actions_with_root_exn (1,095 samples, 0.28%)</title><rect x="1160.7" y="53" width="3.3" height="15.0" fill="rgb(216,9,54)" rx="2" ry="2" />
<text  x="1163.68" y="63.5" ></text>
</g>
<g >
<title>Dune.exe.Raytracer.metal_1680 (679 samples, 0.18%)</title><rect x="20.0" y="117" width="2.1" height="15.0" fill="rgb(220,209,42)" rx="2" ry="2" />
<text  x="23.05" y="127.5" ></text>
</g>
<g >
<title>Dune.exe.Raytracer.fill_916 (385,350 samples, 99.73%)</title><rect x="13.1" y="213" width="1176.9" height="15.0" fill="rgb(251,208,11)" rx="2" ry="2" />
<text  x="16.15" y="223.5" >Dune.exe.Raytracer.fill_916</text>
</g>
<g >
<title>Dune.exe.Raytracer.main_2478 (385,351 samples, 99.73%)</title><rect x="13.1" y="245" width="1176.9" height="15.0" fill="rgb(211,122,10)" rx="2" ry="2" />
<text  x="16.15" y="255.5" >Dune.exe.Raytracer.main_2478</text>
</g>
<g >
<title>Dune.exe.Raytracer.anon_fn[raytracer.ml:447,19--372]_2005 (385,301 samples, 99.72%)</title><rect x="13.2" y="181" width="1176.7" height="15.0" fill="rgb(225,68,48)" rx="2" ry="2" />
<text  x="16.21" y="191.5" >Dune.exe.Raytracer.anon_fn[raytracer.ml:447,19--372]_2005</text>
</g>
<g >
<title>process_pending_actions_with_root_exn (709 samples, 0.18%)</title><rect x="453.6" y="37" width="2.1" height="15.0" fill="rgb(209,213,37)" rx="2" ry="2" />
<text  x="456.56" y="47.5" ></text>
</g>
<g >
<title>Stdlib.seq.map_82 (385,056 samples, 99.66%)</title><rect x="13.9" y="149" width="1175.9" height="15.0" fill="rgb(241,182,14)" rx="2" ry="2" />
<text  x="16.86" y="159.5" >Stdlib.seq.map_82</text>
</g>
<g >
<title>caml_floatarray_create (8,568 samples, 2.22%)</title><rect x="422.0" y="53" width="26.2" height="15.0" fill="rgb(221,29,35)" rx="2" ry="2" />
<text  x="425.05" y="63.5" >c..</text>
</g>
<g >
<title>Stdlib.seq.map_82 (443 samples, 0.11%)</title><rect x="1188.4" y="117" width="1.4" height="15.0" fill="rgb(212,79,44)" rx="2" ry="2" />
<text  x="1191.43" y="127.5" ></text>
</g>
<g >
<title>Stdlib.float.map2_813 (476 samples, 0.12%)</title><rect x="1185.8" y="101" width="1.4" height="15.0" fill="rgb(220,176,25)" rx="2" ry="2" />
<text  x="1188.79" y="111.5" ></text>
</g>
<g >
<title>caml_alloc_small_dispatch (398 samples, 0.10%)</title><rect x="754.6" y="37" width="1.2" height="15.0" fill="rgb(241,114,33)" rx="2" ry="2" />
<text  x="757.62" y="47.5" ></text>
</g>
<g >
<title>caml_startup (385,351 samples, 99.73%)</title><rect x="13.1" y="341" width="1176.9" height="15.0" fill="rgb(223,43,2)" rx="2" ry="2" />
<text  x="16.15" y="351.5" >caml_startup</text>
</g>
<g >
<title>_start (385,360 samples, 99.73%)</title><rect x="13.1" y="405" width="1176.9" height="15.0" fill="rgb(215,107,42)" rx="2" ry="2" />
<text  x="16.14" y="415.5" >_start</text>
</g>
<g >
<title>caml_start_program (385,351 samples, 99.73%)</title><rect x="13.1" y="293" width="1176.9" height="15.0" fill="rgb(212,59,19)" rx="2" ry="2" />
<text  x="16.15" y="303.5" >caml_start_program</text>
</g>
<g >
<title>Dune.exe.Raytracer.anon_fn[raytracer.ml:20,45--71]_203 (58,684 samples, 15.19%)</title><rect x="576.7" y="69" width="179.2" height="15.0" fill="rgb(249,36,29)" rx="2" ry="2" />
<text  x="579.69" y="79.5" >Dune.exe.Raytracer.anon..</text>
</g>
<g >
<title>caml_call_gc (440 samples, 0.11%)</title><rect x="754.6" y="53" width="1.3" height="15.0" fill="rgb(241,61,16)" rx="2" ry="2" />
<text  x="757.57" y="63.5" ></text>
</g>
<g >
<title>caml_program (385,351 samples, 99.73%)</title><rect x="13.1" y="277" width="1176.9" height="15.0" fill="rgb(216,35,21)" rx="2" ry="2" />
<text  x="16.15" y="287.5" >caml_program</text>
</g>
<g >
<title>Dune.exe.Raytracer.random_in_unit_disk_430 (425 samples, 0.11%)</title><rect x="1184.5" y="101" width="1.3" height="15.0" fill="rgb(223,112,20)" rx="2" ry="2" />
<text  x="1187.49" y="111.5" ></text>
</g>
<g >
<title>Stdlib.fun.protect_85 (385,350 samples, 99.73%)</title><rect x="13.1" y="229" width="1176.9" height="15.0" fill="rgb(236,157,23)" rx="2" ry="2" />
<text  x="16.15" y="239.5" >Stdlib.fun.protect_85</text>
</g>
<g >
<title>Dune.exe.Raytracer.sphere_6372 (447 samples, 0.12%)</title><rect x="1174.4" y="101" width="1.4" height="15.0" fill="rgb(205,123,19)" rx="2" ry="2" />
<text  x="1177.41" y="111.5" ></text>
</g>
<g >
<title>caml_alloc_small_dispatch (687 samples, 0.18%)</title><rect x="875.0" y="53" width="2.1" height="15.0" fill="rgb(249,35,20)" rx="2" ry="2" />
<text  x="877.97" y="63.5" ></text>
</g>
<g >
<title>caml_startup_common (385,351 samples, 99.73%)</title><rect x="13.1" y="309" width="1176.9" height="15.0" fill="rgb(243,3,26)" rx="2" ry="2" />
<text  x="16.15" y="319.5" >caml_startup_common</text>
</g>
<g >
<title>Dune.exe.Raytracer.cast_1883 (383,094 samples, 99.15%)</title><rect x="14.1" y="133" width="1169.9" height="15.0" fill="rgb(248,137,9)" rx="2" ry="2" />
<text  x="17.11" y="143.5" >Dune.exe.Raytracer.cast_1883</text>
</g>
<g >
<title>caml_process_pending_actions_with_root (2,460 samples, 0.64%)</title><rect x="448.2" y="53" width="7.5" height="15.0" fill="rgb(223,217,43)" rx="2" ry="2" />
<text  x="451.22" y="63.5" ></text>
</g>
<g >
<title>Stdlib.float.init_456 (419 samples, 0.11%)</title><rect x="1184.5" y="85" width="1.3" height="15.0" fill="rgb(208,67,21)" rx="2" ry="2" />
<text  x="1187.51" y="95.5" ></text>
</g>
<g >
<title>caml_alloc_small_dispatch (443 samples, 0.11%)</title><rect x="1128.0" y="53" width="1.4" height="15.0" fill="rgb(209,91,18)" rx="2" ry="2" />
<text  x="1131.01" y="63.5" ></text>
</g>
<g >
<title>caml_alloc_small_dispatch (467 samples, 0.12%)</title><rect x="420.6" y="37" width="1.4" height="15.0" fill="rgb(249,99,42)" rx="2" ry="2" />
<text  x="423.57" y="47.5" ></text>
</g>
<g >
<title>Dune.exe.Raytracer.dot_269 (100,187 samples, 25.93%)</title><rect x="153.2" y="85" width="305.9" height="15.0" fill="rgb(210,211,34)" rx="2" ry="2" />
<text  x="156.17" y="95.5" >Dune.exe.Raytracer.dot_269</text>
</g>
<g >
<title>Stdlib.float.map_789 (385 samples, 0.10%)</title><rect x="1187.2" y="101" width="1.2" height="15.0" fill="rgb(240,117,16)" rx="2" ry="2" />
<text  x="1190.25" y="111.5" ></text>
</g>
<g >
<title>Dune.exe.Raytracer.random_in_unit_sphere_457 (368 samples, 0.10%)</title><rect x="20.3" y="101" width="1.1" height="15.0" fill="rgb(236,178,30)" rx="2" ry="2" />
<text  x="23.29" y="111.5" ></text>
</g>
<g >
<title>Stdlib.seq.map_82 (1,783 samples, 0.46%)</title><rect x="1184.3" y="133" width="5.5" height="15.0" fill="rgb(231,194,8)" rx="2" ry="2" />
<text  x="1187.34" y="143.5" ></text>
</g>
<g >
<title>caml_process_pending_actions_with_root (3,384 samples, 0.88%)</title><rect x="1153.7" y="69" width="10.3" height="15.0" fill="rgb(253,77,54)" rx="2" ry="2" />
<text  x="1156.69" y="79.5" ></text>
</g>
<g >
<title>caml_main (385,351 samples, 99.73%)</title><rect x="13.1" y="357" width="1176.9" height="15.0" fill="rgb(247,5,47)" rx="2" ry="2" />
<text  x="16.15" y="367.5" >caml_main</text>
</g>
<g >
<title>Stdlib.float.fold_left_894 (136,651 samples, 35.37%)</title><rect x="459.8" y="85" width="417.4" height="15.0" fill="rgb(240,186,0)" rx="2" ry="2" />
<text  x="462.84" y="95.5" >Stdlib.float.fold_left_894</text>
</g>
<g >
<title>Dune.exe.Raytracer.search_1561 (379,699 samples, 98.27%)</title><rect x="22.1" y="117" width="1159.6" height="15.0" fill="rgb(224,67,31)" rx="2" ry="2" />
<text  x="25.13" y="127.5" >Dune.exe.Raytracer.search_1561</text>
</g>
<g >
<title>Dune.exe.Raytracer.sphere_1471 (372,240 samples, 96.34%)</title><rect x="32.0" y="101" width="1136.8" height="15.0" fill="rgb(235,189,2)" rx="2" ry="2" />
<text  x="35.04" y="111.5" >Dune.exe.Raytracer.sphere_1471</text>
</g>
<g >
<title>caml_c_call (2,865 samples, 0.74%)</title><rect x="1119.2" y="69" width="8.8" height="15.0" fill="rgb(214,176,53)" rx="2" ry="2" />
<text  x="1122.23" y="79.5" ></text>
</g>
<g >
<title>caml_major_collection_slice (345 samples, 0.09%)</title><rect x="876.0" y="37" width="1.1" height="15.0" fill="rgb(241,166,1)" rx="2" ry="2" />
<text  x="879.02" y="47.5" ></text>
</g>
</g>
</svg>
